{
    "swagger": "2.0",
    "info": {
      "title": "My API",
      "version": "1.0.0",
      "description": "This is a sample API for demonstrating Swagger with Go Echo."
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "schemes": ["http"],
    "produces": ["application/json"],
    "consumes": ["application/json"],
    "paths": {
      "/users": {
        "get": {
          "tags": ["users"],
          "summary": "Lists all users.",
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/User"
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        },
        "post": {
          "tags": ["users"],
          "summary": "Creates a new user.",
          "responses": {
            "201": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/User"
              }
            },
            "400": {
              "description": "Bad Request",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            },
            "500": {
              "description": "Internal Server Error",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      },
      "/users/{id}": {
        "get": {
          "tags": ["users"],
          "summary": "Gets a user by ID.",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "integer"
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/User"
              }
            },
            "404": {
              "description": "Not Found",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            },
            "500": {
              "description": "Internal Server Error",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        },
        "put": {
          "tags": ["users"],
          "summary": "Updates an existing user.",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "integer"
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/User"
              }
            },
            "400": {
              "description": "Bad Request",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            },
            "404": {
              "description": "Not Found",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            },
            "500": {
              "description": "Internal Server Error",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        },
        "delete": {
          "tags": ["users"],
          "summary": "Deletes a user.",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "integer"
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            },
            "404": {
              "description": "Not Found",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            },
            "500": {
              "description": "Internal Server Error",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "definitions": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "username": {
            "type": "string",
            "example": "johndoe"
          },
          "email": {
            "type": "string",
            "example": "johndoe@example.com"
          }
        },
        "required": ["id", "username", "email"]
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Invalid request"
          }
        },
        "required": ["message"]
      }
    }
  }
